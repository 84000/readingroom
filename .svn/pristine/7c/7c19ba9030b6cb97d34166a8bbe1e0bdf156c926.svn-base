package org.tbrc.readingroom.server;

public class XmlUtils
{
	//
	// Utility functions
	//
	public static String getXmlNode(String str, String nodeType, int begin)
	{
		String fullNode = "";
		
		String startTag = "<" + nodeType;
		String endTag = "</" + nodeType + ">";

		int startTagPos = begin, prevStartTagPos = begin+1;
		int endTagPos, prevEndTagPos = begin;
		
		int endTagsNeeded = 1;	// We know we need at least the 1 endTag for our known tag

		while (endTagsNeeded > 0)
		{
			endTagPos = str.indexOf(endTag, prevEndTagPos);
			if (endTagPos < 0)
				break;
			
			endTagsNeeded--;
				
			// Check for additional start tags between original and newly-found end tag
			while (true)
			{
				startTagPos = str.indexOf(startTag, prevStartTagPos);
				if (startTagPos < 0 || startTagPos >= endTagPos)
					break;
				endTagsNeeded++;
				prevStartTagPos = startTagPos+1;
			}
			
			prevEndTagPos = endTagPos+1;
		}
		
		fullNode = str.substring(begin, prevEndTagPos + endTag.length());
		
		return fullNode;
	}
	
	public static String getBookendedString(String str, String beginStr, String endStr, boolean includeBookends)
	{
		String subStr = null;
		int begin, end;

		if (includeBookends)
		{
			begin = str.indexOf(beginStr);
			end = str.indexOf(endStr) + endStr.length();
		}
		else
		{
			begin = str.indexOf(beginStr) + beginStr.length();
			end = str.indexOf(endStr);
		}
		
		if (begin > 0 && end > begin)
			subStr = str.substring(begin, end);
		
		return subStr;
	}
	
	/**
	 * Count the number of instances of substring within a string.
	 *
	 * @param string     String to look for substring in.
	 * @param substring  Sub-string to look for.
	 * @return           Count of substrings in string.
	 */
	public static int count(final String string, final String substring)
	{
		int count = 0;
		int idx = 0;

		while ((idx = string.indexOf(substring, idx)) != -1)
		{
			idx++;
			count++;
		}

		return count;
	}
}
